name: Build Packages
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:
jobs:
    test-and-build:
        name: Test project and build packages
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11'
            - name: Setup Poetry
              uses: Gr1N/setup-poetry@v7
            - name: Remove custom pypi sources
              # Custom sources are only helpful in China
              run: |
                poetry source show | grep name | cut -d : -f 2 | while read -r source
                do
                    poetry source remove $source
                done
            - name: Install depends
              run: poetry install --with=dev --with=gui
            - name: Run program tests
              continue-on-error: true
              run: |
                poetry run pycycle --here --verbose
                poetry run pytest --cov=autoxuexiplaywright
                poetry run pydocstyle
                poetry run isort --check --diff .
                poetry run autopep8 -r --diff .
            - name: Build wheel
              run: poetry build
            - name: Build python-autoxuexiplaywright
              id: arch-package
              uses: ouuan/pkgbuild-action@v1.2.0
              with:
                  path: resources/makepkg/autoxuexiplaywright
            - name: Build python-ffmpeg
              id: arch-python-ffmpeg
              uses: ouuan/pkgbuild-action@v1.2.0
              with:
                  path: resources/makepkg/python-ffmpeg-jonghwanhyeon
            - name: Release
              uses: softprops/action-gh-release@v1
              if: startsWith( github.ref, 'refs/tags/v')
              with:
                  files: |
                      dist/*
                      ${{ steps.arch-package.outputs.pkgfile }}
                      ${{ steps.arch-python-ffmpeg.outputs.pkgfile }}
                  generate_release_notes: true

    push-to-techxuexi:
        name: Sync Code to TechXueXi
        needs: test-and-build
        runs-on: ubuntu-latest
        if: ${{ github.event.event_name }} == "push"
        steps:
        - name: check
          uses: actions/checkout@v3
          with:
              fetch-depth: 0
        - name: Git Configuration
          env:
              DEBIAN_FRONTEND: noninteractive
          run: |
              git config --global user.name 'GitHub' && git config --global user.email 'noreply@github.com'
        - name: Push Code
          run: |
              mkdir -p ~/.ssh
              echo -e "${{ secrets.SSHKEY }}" > ~/.ssh/id_rsa
              chmod 600 ~/.ssh/id_rsa
              ssh-keyscan github.com > ~/.ssh/known_hosts
              git push -f "git@github.com:TechXueXi/AutoXuexiPlaywright.git" "main:main" --tags
